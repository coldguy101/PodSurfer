"use strict";
const Observable_1 = require('../Observable');
const subscribeToResult_1 = require('../util/subscribeToResult');
const OuterSubscriber_1 = require('../OuterSubscriber');
class DeferObservable extends Observable_1.Observable {
    constructor(observableFactory) {
        super();
        this.observableFactory = observableFactory;
    }
    static create(observableFactory) {
        return new DeferObservable(observableFactory);
    }
    _subscribe(subscriber) {
        return new DeferSubscriber(subscriber, this.observableFactory);
    }
}
exports.DeferObservable = DeferObservable;
class DeferSubscriber extends OuterSubscriber_1.OuterSubscriber {
    constructor(destination, factory) {
        super(destination);
        this.factory = factory;
        this.tryDefer();
    }
    tryDefer() {
        try {
            this._callFactory();
        }
        catch (err) {
            this._error(err);
        }
    }
    _callFactory() {
        const result = this.factory();
        if (result) {
            this.add(subscribeToResult_1.subscribeToResult(this, result));
        }
    }
}
//# sourceMappingURL=DeferObservable.js.map